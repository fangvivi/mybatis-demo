<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wayne.mybatis.mapper.EmpMapper">

    <!--
    resultMap：设置自定义映射
    属性：
        id：表示自定义映射的唯一标识
        type：查询的数据要映射的实体类的类型
    子标签：
        id：设置主键的映射关系
        result：设置普通字段的映射关系
        association：设置多对一的映射关系
        collection：设置一对多的映射关系
    属性：
        property：设置映射关系中实体类中的属性名
        column：设置映射关系中表中的字段名
    -->
    <resultMap id="empResultMap" type="Emp">
        <!--id 处理主键的映射关系-->
        <id property="eid" column="eid"/>
        <!--result 处理普通字段的映射关系-->
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="empName" column="emp_name"/>
        <result property="email" column="email"/>
    </resultMap>

    <!--resultType只能处理字段名和属性名相同的映射-->
    <select id="getAllEmpByResultMap" resultMap="empResultMap">
        select * from t_emp
    </select>

    <!--解决字段名和属性名不一致：给字段取别名-->
    <select id="getAllEmpByAlias" resultType="emp">
        select eid, emp_name empName, age, sex, email, did from t_emp;
    </select>

    <!--解决字段名和属性名不一致：通过开启驼峰命名自动映射，属性名要和字段名去掉下划线一样才可以生效-->
    <!--如：把empName映射为emp_name-->
    <select id="getAllEmpByGlobalConfig" resultType="Emp">
        select * from t_emp
    </select>

    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id property="eid" column="eid"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="empName" column="emp_name"/>
        <result property="email" column="email"/>
        <result property="dept.did" column="did"/>
        <result property="dept.deptName" column="dept_name"/>
    </resultMap>
    <!--处理多对一：通过级联属性的方式-->
    <select id="getEmpAndDeptByCascadeProperty" resultMap="empAndDeptResultMapOne">
        select * from t_emp left join t_dept td on t_emp.did = td.did
        where t_emp.eid = #{eid}
    </select>

    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="empName" column="emp_name"/>
        <result property="email" column="email"/>
        <association property="dept" javaType="Dept">
            <id property="did" column="did"/>
            <result property="deptName" column="dept_name"/>
        </association>
    </resultMap>
    <!--处理多对一：通过association标签-->
    <select id="getEmpAndDeptByAssociation" resultMap="empAndDeptResultMapTwo">
        select * from t_emp left join t_dept td on t_emp.did = td.did
        where t_emp.eid = #{eid}
    </select>

    <!--association标签的column属性指定下一步查询所需的条件-->
    <resultMap id="empAndDeptResultMapStep" type="Emp">
        <id property="eid" column="eid"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="empName" column="emp_name"/>
        <result property="email" column="email"/>
        <association property="dept"
                     select="com.wayne.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     fetchType="lazy"
                     column="did"/>
    </resultMap>
    <!--处理多对一，分步查询第一步：通过association分步查询-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptResultMapStep">
        select * from t_emp where eid=#{eid}
    </select>

    <!--一对多，分步查询第二步，根据部门id获取该部门的所有员工-->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select * from t_emp where did=#{did}
    </select>


</mapper>